#!/usr/bin/env python

########################################################################
# THIS PROGRAM WILL TRY TO ISOLATE THE TEXT WE WANT FROM EACH MANPAGE. #
# FOR NOW, TEXT WILL BE DUMBED IN FILES, BUT LATER THIS PROGRAM WILL   #
# MERGE WITH MANSEARCH, AND IT WILL BE RUN AS A SUBBRUTINE FOR EVERY   #
# HIT (DON'T FORGET THE DB)                                            #
########################################################################

# fucking hell

from whylib import *
from gzip import open as gzopen

def print_data(name, f):
	print "[!] Something interesting found in %s !" % name
	line = f.readline()
	while not line.startswith(".SH") and line:
		print line
		line = f.readline()
	print "[!] Done printing sections of %s" % name
	return

# for every string in strings (file in oufiles_names)
# unzip it again and check for .SH <string>
# as a first test, print all text (nicely) before next .SH

for string in strings:

	with open(outfiles_names[string], 'r') as listfile:

		print "[!] Currently checking manpages logged in file : %s" % outfiles_names[string]
		print "[!] That is, manpages where keyword \"%s\" was spotted" % string

		manpage_name = ''.join(listfile.readline()[1:-1].split(') '))

		while manpage_name != '':

			with gzopen(manpage_name, 'r') as manpage:

				print "[!] Currently checking manpage %s" % manpage_name
				line = manpage.readline()

				while line:
					if line.startswith(".SH %s" % string) or line.startswith(".SH \"%s\"" % string):
						print_data(manpage_name, manpage)
						break
					line = manpage.readline()

			print "[!] Done checking manpage %s" % manpage_name
			print "-------------------------------------------------------------------"

			manpage_name = ''.join(listfile.readline()[1:-1].split(') '))

	print "[!] Done with file : %s" % outfiles_names[string]